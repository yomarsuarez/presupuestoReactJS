{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","nanoid","protoTypes","PropTypes","func","isRequired","Gasto","object","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2d2d3b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Error = ({ mensaje }) => (\n  <p className=\"alert alert-danger error\">{mensaje}</p>\n);\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n};\nexport default Error;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Error from \"./Error\";\n\nconst Pregunta = ({\n  guardarPresupuesto,\n  guardarRestante,\n  actualizarPregunta,\n}) => {\n  //Definir el state\n\n  const [cantidad, guardarCantidad] = useState(0);\n  const [error, guardarError] = useState(false);\n  // Funcion que lee el presupuesto\n  const definirPresupuesto = (e) => {\n    guardarCantidad(parseInt(e.target.value, 10));\n  };\n\n  //Submit para definir el presupuesto\n  const agregarPresupuesto = (e) => {\n    e.preventDefault();\n\n    //Validar\n    if (cantidad < 1 || isNaN(cantidad)) {\n      guardarError(true);\n      return;\n    }\n\n    //Si se pasa la validación\n    guardarError(false);\n    guardarPresupuesto(cantidad);\n    guardarRestante(cantidad);\n    actualizarPregunta(false);\n  };\n  return (\n    <Fragment>\n      <h2>Coloca tu presupuesto</h2>\n      {error ? <Error mensaje=\"El Presupuesto es Incorrecto\" /> : null}\n      <form onSubmit={agregarPresupuesto}>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Coloca tu presupuesto\"\n          onChange={definirPresupuesto}\n        />\n        <input\n          type=\"submit\"\n          className=\"button-primary u-full-width\"\n          value=\"Definir Presupuesto\"\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nPregunta.propTypes = {\n  guardarPresupuesto: PropTypes.func.isRequired,\n  guardarRestante: PropTypes.func.isRequired,\n  actualizarPregunta: PropTypes.func.isRequired,\n};\n\nexport default Pregunta;\n","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport Error from \"./Error\";\n\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\n  const [nombre, guardarNombre] = useState(\"\");\n  const [cantidad, guardarCantidad] = useState(0);\n  const [error, guardarError] = useState(false);\n\n  //Cuando el usuario agrega un gasto\n  const agregarGasto = (e) => {\n    e.preventDefault();\n\n    //validar\n    if (cantidad < 1 || isNaN(cantidad) || nombre.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n    guardarError(false);\n\n    //construir el gasto\n    const gasto = {\n      nombre,\n      cantidad,\n      id: nanoid(),\n    };\n    //pasar el gasto al componente principal\n    guardarGasto(gasto);\n    guardarCrearGasto(true);\n\n    //resetear el form\n    guardarNombre(\"\");\n    guardarCantidad(0);\n  };\n  return (\n    <form onSubmit={agregarGasto}>\n      <h2>Agrega tus gastos aquí</h2>\n      {error ? (\n        <Error mensaje=\"Ambos campos son obligatorios o presupuesto incorrecto\" />\n      ) : null}\n      <div className=\"campo\">\n        <label>Nombre Gasto</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. Transporte\"\n          value={nombre}\n          onChange={(e) => guardarNombre(e.target.value)}\n        />\n      </div>\n\n      <div className=\"campo\">\n        <label>Cantidad Gasto</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. 400\"\n          value={cantidad}\n          onChange={(e) => guardarCantidad(parseInt(e.target.value, 10))}\n        />\n      </div>\n\n      <input\n        type=\"submit\"\n        className=\"button-primary u-full-width\"\n        value=\"Agregar Gasto\"\n      />\n    </form>\n  );\n};\n\nFormulario.protoTypes = {\n  guardarGasto: PropTypes.func.isRequired,\n  guardarCrearGasto: PropTypes.func.isRequired,\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Gasto = ({ gasto }) => (\n  <li className=\"gastos\">\n    <p>\n      {gasto.nombre}\n      <span className=\"gasto\">$ {gasto.cantidad}</span>\n    </p>\n  </li>\n);\n\nGasto.protoTypes = {\n  gasto: PropTypes.object.isRequired,\n};\n\nexport default Gasto;\n","import React from \"react\";\nimport Gasto from \"./Gasto\";\nimport PropTypes from \"prop-types\";\n\nconst Listado = ({ gastos }) => (\n  <div className=\"gastos-realizados\">\n    <h2>Listado</h2>\n    {gastos.map((gasto) => (\n      <Gasto key={gasto.id} gasto={gasto} />\n    ))}\n  </div>\n);\n\nListado.propTypes = {\n  gastos: PropTypes.array.isRequired,\n};\n\nexport default Listado;\n","export const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n\n  if (presupuesto / 4 > restante) {\n    clase = \"alert alert-danger\";\n  } else if (presupuesto / 2 > restante) {\n    clase = \"alert alert-warning\";\n  } else {\n    clase = \"alert alert-success\";\n  }\n\n  return clase;\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { revisarPresupuesto } from \"../helpers\";\n\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\n  return (\n    <Fragment>\n      <div className=\"alert alert-primary\">Presupuesto: ${presupuesto}</div>\n      <div className={revisarPresupuesto(presupuesto, restante)}>\n        Restante: ${restante}\n      </div>\n    </Fragment>\n  );\n};\n\nControlPresupuesto.propTypes = {\n  presupuesto: PropTypes.number.isRequired,\n  restante: PropTypes.number.isRequired,\n};\nexport default ControlPresupuesto;\n","import React, { useState, useEffect } from \"react\";\nimport Pregunta from \"./components/Pregunta\";\nimport Formulario from \"./components/Formulario\";\nimport Listado from \"./components/Listado\";\nimport ControlPresupuesto from \"./components/ControlPresupuesto\";\n\nfunction App() {\n  //definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarPregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n\n  //UseEffect que actualiza el restante\n\n  useEffect(() => {\n    if (crearGasto) {\n      //Agrega el nuevo presupuesto\n      guardarGastos([...gastos, gasto]);\n\n      //Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n      //Resetear a false\n      guardarCrearGasto(false);\n    }\n  }, [gasto, crearGasto, gastos, restante]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>;\n        <div className=\"contenido-principal contenido\">\n          {mostrarPregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />\n          ) : (\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado gastos={gastos} />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}